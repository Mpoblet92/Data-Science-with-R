Titanic$3rd
Titanic$class
Titanic$Class
sum(Titanic[3,1:2,1:2,2])
sum(Titanic[3,,,2])
sum(Titanic[3,,,2])
Titanic[,,,1]
sum(Titanic[,,,1])
Titanic(c(4))
Titanic[c(4)]
Titanic[c(3)]
passangers <- table(sum(Titanic[,,,1]),sum(Titanic[,,,2]))
passangers
passangers <- table(Titanic$Survived)
survived <- matrix(c((sum(Titanic[,,,1]),sum(Titanic[,,,2])),ncol=2,byrow=FALSE)
notSurvived <- sum(Titanic[,,,1])
survived <- sum(Titanic[,,,2])
allPassengers <- matrix(c(notSurvived,survived),ncol=2,byrow=FALSE)
colnames(0) <- c("Didn't Survive", "Survived")
rownames(0) < c("Passangers")
notSurvived <- sum(Titanic[,,,1])
survived <- sum(Titanic[,,,2])
allPassengers <- matrix(c(notSurvived,survived),ncol=2,byrow=FALSE)
colnames(0) <- c("Didn't Survive", "Survived")
View(allPassengers)
View(allPassengers)
View(allPassengers)
allPassengers
colnames(0) <- c("Didn't Survive", "Survived")
allPassengers <- matrix(c(notSurvived,survived),ncol=2,byrow=FALSE)
m <- matrix(Titanic, nrow = 4, ncol = 2)
m
sum(Titanic)
rm(list=list())
rm(list=ls())
data("Titanic")
dinner <- list(occasion="Thanksgiving",
cost=131.78,
guests=c("Sue","Pete","Katie","Howard"))
str(dinner)
dinner
holiday <- list("Thanksgiving", 131.78,
c("Sue", "Pete", "Katie", "Howard"))
str(holiday)
holiday
dinner$cost
dinner[2]
dinner[[2]]
holiday[3]
holiday[[3]]
m <- seq(1,24)
m                  #View as a vector
dim(m) <- c(3,4,2) #Assign dimensions
m                  #View as 3D
#Access parts of matrix with specific indices
m[3,1,2]
m[1,,]
m[2,,] <- 4
m
m[,4,] <- seq(from=60,to=10, by=-10)
m
#Set up names for each index
indexNames <- list(Company = c("Exxon", "Shell", "BP"),
Quarter = c("Q1", "Q2", "Q3", "Q4"),
TaxEntity = c("Federal", "State") )
dimnames(m) <- indexNames
str(m)
m
#Accessing matrix segments by name
m["Exxon"]
m["Exxon",,]
m["Q3",,]
m[,"Q3",]
m[,,"Federal"]
m["Exxon",,"Federal"]
m["BP","Q3","State"]
m[2:3,3:4,]
m[1:3,c(1,4),1]
m
sum(m[,4,])
apply(m,2,sum)
sd(m[3,,])
apply(m,1,sd)
Titanic["1st","Female","child","Yes"]
Titanic["1st","Female","Child","Yes"]
apply(Titanic,1,sum)
apply(Titanic,1:4,sum)
apply(Titanic,c(1,2,3,),sum)
apply(Titanic,c(1,2,3),sum)
apply(Titanic,c(4),sum)
apply(Titanic,4,sum)
sum(Titanic[4])
sum(Titanic[3,,,2])
apply(Titanic,2,sum)
sum(Titanic[,1:2,,])
apply(Titanic,2,sum)
rm(list = ls())
data("Titanic")
?Titanic
Titanic
Titanic[1,2,1,2]
sum(Titanic[3,,,2])
apply(Titanic,4,sum)
sum(Titanic)
apply(Titanic,2,sum)
apply(Titanic,c(2,4),sum)
sum(Titanic[,1:2,,2])
mean(m[,3,2])
m <- seq(1,24)
m                  #View as a vector
dim(m) <- c(3,4,2) #Assign dimensions
m                  #View as 3D
#Access parts of matrix with specific indices
m[3,1,2]
m[1,,]
m[1,1,]
m[,1,]
m[,1,1]
m[,,1]
m[1,,1]
m[1]
m[1,]
#Set everything in 2nd row to 4
m[2,,] <- 4
m
#Set entries in column 4 to specific sequence
m[,4,] <- seq(from=60,to=10, by=-10)
m
#Set up names for each index
indexNames <- list(Company = c("Exxon", "Shell", "BP"),
Quarter = c("Q1", "Q2", "Q3", "Q4"),
TaxEntity = c("Federal", "State") )
dimnames(m) <- indexNames
str(m)
m
#Accessing matrix segments by name
m["Exxon"]
m["Exxon",,]
m["Q3",,]
m[,"Q3",]
m[,,"Federal"]
m["Exxon",,"Federal"]
m["BP","Q3","State"]
m[2:3,3:4,]
m[1:3,c(1,4),1]
m
sum(m[,4,])
apply(m,2,sum)
sd(m[3,,])
apply(m,1,sd)
mean(m[,3,2])
apply(m,2:3,mean)
m
apply(m,1:2,sum)
apply(m,c(1,3),mean)
sum(Titanic[,c(1,2),,2]
sum(Titanic[,c(1,2),,2])
sum(Titanic[,c(1,2),,2])
apply(Titanic,2,sum)
sum(Titanic[,1,,2])
sum(Titanic[Titanic %in% c("Male","Female","Yes")])
sum([Titanic %in% c("Male","Female","Yes")])
sum(Titanic[Titanic %in% c("Sex","Yes")])
Titanic[Titanic %in% c("Sex","Yes")]
data("USArrests")
?USArrests
USArrests
USArrests$Wyoming
USArrests$Murder
USArrests["Oregon"]
USArrests[1,"Oregon"]
USArrests$Murder["Oregon"]
#Create data frame
candidates <- data.frame(Gender = c("F","M","F","F","M"),
ID = 103:107,
score = c(78, 92, 61, 92, 85))
#Create an additional column
lastName <- c("Perkins", "Patel", "Jackson", "Brown", "Wu")
#Does not change data frame
cbind(candidates,lastNames)
candidates
#Modifies data frame
candidates <- cbind(candidates,lastName)
#Accessing data frame
candidates$score
candidates[3]
candidates[3,]
candidates$score[3]
best <- max(candidates$score)
candFilter <- candidates$score==best
candFilter
candidates[candFilter]
candidates[candFilter,]
candidates$score[3] <- 92
candidates[candidates$score==best,"ID"]
candidates[candFilter,c("ID","lastName")]
#Rows can be named
row.names(candidates) <- c("A", "B", "C", "D", "E")
candidates
row.names(candidates) <- (candidates$ID + 800)
candidates
sum(Titanic[,1,,2])
USArrests$Murder["Oregon"]
USArrests$Murder[["Oregon"]]
m <- sum(Titanic[,1,,2])
# Males Survived
m
f <- sum(Titanic[,2,,2])
# Femailes Survived
f
apply(Titanic,2,sum)
(sum(Titanic[,1,,])/m)*100
(m/sum(Titanic[,1,,]))*100
sum(Titanic[,1,,])
(f/sum(Titanic[,2,,]))*100
str(USArrests)
candidates[candFilter,c("ID","lastName")]
row.names(candidates) <- c("A", "B", "C", "D", "E")
candidates
candidates[candidates$score==best,"ID"]
candidates[candFilter,c("ID","lastName")]
View(candidates)
candidates$score
candidates[3]
candidates[3,]
candidates$score[3]
view(USArrests)
View(USArrests)
nrow(USArrests)
USArrests
str(USArrests)
USArrests$Murder['Oregon']
USArrests['Oregon']
USArrests[1,'Oregon']
USArrests[1,'Oregon',,]
USArrests[1,2]
USArrests[,2]
USArrests['Oregon',1]
sum(USArrests['Vermont',c(1,2,4)])
apply(USArrests,c(1,2,4),mean)
totalArrests <- sum(USArrests[c(1,2,4)])
totalArrests
averageArrests <- mean(USArrests[c(1,2,4)])
mean(USArrests[2])
mean(USArrests[,2])
sum(USArrests['Georgia',2])
sum(USArrests['Georgia',4])
View(candidates)
Total <- USArrests$Murder + USArrests$Assault + USArrests$Rape
USArrests <- c(USArrests, Total)
USArrests
rm(list = ls())
source('G:/Data Science/Lab1_Poblet.r', echo=TRUE)
USArrests <- cbind(USArrests, Total)
USArrests
rm(list = ls())
source('G:/Data Science/Lab1_Poblet.r', echo=TRUE)
View(USArrests)
sum(USArrests['Georgia',c(2,4)])
totalArrests <- USArrests$Murder + USArrests$Assault + USArrests$Rape
USArrests <- cbind(USArrests, totalArrests)
USArrests
rm(list = ls())
USArrests
source('G:/Data Science/Lab1_Poblet.r', echo=TRUE)
rm(list = ls())
pnorm(450, mean = 496, sd = 114)
pnorm(0)      #Default is standard normal
pnorm(1.5)
pnorm(1.5, lower.tail = FALSE)
pnorm(70, mean=100, sd=15)  #Percent at 70 or below
pnorm(150, mean=100, sd=15, lower.tail = FALSE)
pnorm(c(-2, -1, 0, 1, 2))
pnorm(c(90, 100, 110, 120), mean=100, sd=15)
qnorm(.5)       #Equivalent to median value
qnorm(.25)      #Equivalent to first quartile
qnorm(.75)
qnorm(.25, lower.tail = FALSE)
qnorm(.8, mean=100, sd=15)
pnorm(580, mean = 496, sd = 114)
qnorm(.75, mean = 496, sd = 114)
qnorm(.8, mean = 496, sd = 114)
qnorm(.05, mean = 496, sd = 114, lower.tail = FALSE)
qnorm(.05, mean = 496, sd = 114)
qnorm(.05, mean = 496, sd = 114, lower.tail = FALSE)
?runif
sample <- runif(100, min = 1, max = 10)
sample
set.seed(519)
sample <- runif(100, min = 1, max = 10)
sample
set.seed(19)
sample <- runif(100, min = 1, max = 10)
sample
set.seed(519)
sample <- runif(100, min = 1, max = 10)
sample
qunif(.25)
?qunif
qunif(100, min = 1, max = 10)
qunif(.25, min = 1, max = 10)
qunif(.25, min = 1, max = 10)
sample.qunif(.25, min = 1, max = 10)
qunif(sample, min = 1, max = 10)
quantile(sample, .25)
hist(sample)
sample <- runif(1000, min = 1, max = 10)
set.seed(519)
sample <- runif(1000, min = 1, max = 10)
quantile(sample, .25)
set.seed(519)
sample <- runif(100, min = 1, max = 10)
sample <- runif(1000, min = 1, max = 10)
quantile(sample, .25)
set.seed(519)
sample <- runif(100, min = 1, max = 10)
sample_Two <- runif(1000, min = 1, max = 10)
quantile(sample_Two, .25)
host(sample_Two)
hist(sample_Two)
sample_Three <- runif(1000, min = 1, max = 10)
quantile(sample_Three, .25)
hist(sample_Three)
set.seed(519)
sample <- runif(100, min = 1, max = 10)
# 2.
qunif(.25, min = 1, max = 10)
# 3.
quantile(sample, .25)
# 4.
hist(sample)
# 5.
sample_Two <- runif(1000, min = 1, max = 10)
# 6.
quantile(sample_Two, .25)
# 7.
hist(sample_Two)
# 8.
sample_Three <- runif(1000, min = 1, max = 10)
# 9.
quantile(sample_Three, .25)
# 10.
hist(sample_Three)
set.seed(519)
sample <- runif(100, min = 1, max = 10)
# 2.
qunif(.25, min = 1, max = 10)
# 3.
quantile(sample, .25)
# 4.
hist(sample)
# 5.
sample_Two <- runif(1000, min = 1, max = 10)
# 6.
quantile(sample_Two, .25)
# 7.
hist(sample_Two)
# 8.
sample_Three <- runif(10000, min = 1, max = 10)
# 9.
quantile(sample_Three, .25)
# 10.
hist(sample_Three)
hist(sample_Three)
# 1.
set.seed(519)
sample <- runif(100, min = 1, max = 10)
# 2.
qunif(.25, min = 1, max = 10)
# 3.
quantile(sample, .25)
# 4.
hist(sample)
# 5.
sample_Two <- runif(1000, min = 1, max = 10)
# 6.
quantile(sample_Two, .25)
# 7.
hist(sample_Two)
# 8.
sample_Three <- runif(10000, min = 1, max = 10)
# 9.
quantile(sample_Three, .25)
# 10.
hist(sample_Three)
mean(sample_Three)
mean(sample_Two)
mean(sample)
rm(list = ls())
data("USJudgeRatings")
USJudgeRatings?
;
?USJudgeRatings
candidates <- data.frame(Gender = c("F","M","F","F","M"),
ID = 103:107,
score = c(78, 92, 61, 92, 85))
lastName <- c("Perkins", "Patel", "Jackson", "Brown", "Wu")
cbind(candidates,lastNames)
candidates
USJudgeRatings
USJudgeRatings
candidates <- cbind(candidates,lastName)
#Accessing data frame
candidates$score
candidates[3]
candidates[3,]
candidates$score[3]
best <- max(candidates$score)
candFilter <- candidates$score==best
candFilter
candidates[candFilter]
candidates[candFilter,]
candidates$score[3] <- 92
candidates[candidates$score==best,"ID"]
candidates[candFilter,c("ID","lastName")]
#Rows can be named
row.names(candidates) <- c("A", "B", "C", "D", "E")
candidates
row.names(candidates) <- (candidates$ID + 800)
candidates
candidates[candFilter,c("ID","lastName")]
candidates[candidates$score==best,"ID"]
candidates[candFilter,c("ID","lastName")]
topJudges <- data.frame(USJudgeRatings = 1:12)
View(USJudgeRatings)
View(USJudgeRatings)
View(topJudges)
View(topJudges)
View(USJudgeRatings)
topJudges <- data.frame(USJudgeRatings(,1:12))
topJudges <- data.frame(USJudgeRatings[,1:12])
candidates[candFilter,c("ID","lastName")]
candidates[candFilter]
candidates[candFilter,]
candidates$score[3] <- 92
candidates[candidates$score==best,"ID"]
candidates[candFilter,c("ID","lastName")]
candidates$score
candidates[3]
candidates[3,]
candidates$score[3]
best <- max(candidates$score)
candFilter <- candidates$score==best
candFilter
candidates[candFilter]
candidates[candFilter,]
candidates
candidates[candFilter,c("ID","lastName")]
topJudges <- data.frame(1:12)
USJudgeRatings$CONT
USJudgeRatings[,2]
max(USJudgeRatings[,1])
max(USJudgeRatings[,2])
?which.max
?pmax
pmax(3:1, USJudgeRatings$CONT)
?max
max(3:1, USJudgeRatings$CONT)
max(3:1, USJudgeRatings[,1])
max(3, USJudgeRatings[,1])
shiny::runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
?plotOutput
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
?sliderInput
runApp('G:/Data Science/Examples/Shiny R/Code_Part1')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Examples/Shiny R/Code_Part1')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
?plot
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Examples/Shiny R/Code_Part1/first app/App')
?rnorm
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
?runof
?runif
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
print(source('G:/Data Science/Examples/Shiny R/Code_Part1/02-hist-app.R')$value)
print(source('G:/Data Science/Examples/Shiny R/Code_Part2/01-two-inputs.R')$value)
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
rnorm(5)
IQ_list <- rnorm(200,mean=100,sd=15)
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
?plot
plotOutput()
?plotOutput
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Examples/Shiny R/Code_Part1/first app/App')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
runApp('G:/Data Science/Examples/Shiny R/Code_Part1/first app/App')
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
?sidebarLayout
runApp('G:/Data Science/Data-Science-with-R/Labs/Lab8_Poblet')
setwd("G:/Data Science/Data-Science-with-R/Projects/Project8_Poblet")
WeatherEvents <- read.csv("WeatherEvents.csv")
View(WeatherEvents)
WeatherEvents$STATE[4,]
WeatherEvents$STATE[[4]]
WeatherEvents$STATE[[10]]
library(dplyr)
library(tidyr)
?group_by
eventGroups <- group_by(WeatherEvents, EVENT)
View(eventGroups)
?filter
eventGroups <- arrange(WeatherEvents, EVENT)
View(eventGroups)
